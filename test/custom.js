"use strict";
var expect = require("chai").expect;
var index_1 = require("../index");
var verb = require("verbo");
var publicDB = {
    "couchdb": {
        "protocol": "http",
        "hostname": "couchdb.kernel.online",
        "port": 8080,
        "db": "testdb"
    }
};
var DB = {
    "couchdb": {
        "protocol": "http",
        "hostname": "couchdb.kernel.online",
        "port": 8080,
    }
};
var privateDB = {
    "couchdb": {
        "protocol": "http",
        "hostname": "couchdb.kernel.online",
        "port": 8080,
        "db": "testdb",
        "user": "admin",
        "password": "admin"
    }
};
var dbJson = new index_1.default(DB.couchdb);
var privateJson = new index_1.default(privateDB.couchdb);
var publicJson = new index_1.default(publicDB.couchdb);
describe("db with https and standard 443 port", function () {
    describe("validation", function () {
        verb(privateJson);
        verb(publicJson.for("aa", "mm"));
        verb(publicJson.for("aa", "mm", "zz"));
        it("is a json", function () {
            expect(publicJson).to.be.a("object");
            expect(privateJson).to.be.a("object");
            expect(dbJson).to.be.a("object");
        });
        it("contains protocol, host, hostname, port, publink", function () {
            expect(publicJson).to.include.keys("protocol", "publink", "host", "hostname", "port");
            expect(privateJson).to.include.keys("protocol", "publink", "host", "hostname", "port");
            expect(dbJson).to.include.keys("protocol", "publink", "host", "hostname", "port");
        });
    });
    describe("private db", function () {
        it("has properties: auth, user, password, db, pubdb, mydb", function () {
            expect(privateJson).to.include.keys("auth", "user", "password", "db", "pubdb", "mydb");
        });
    });
});

//# sourceMappingURL=data:application/json;base64,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QyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hGLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2N1c3RvbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBleHBlY3QgICAgPSByZXF1aXJlKFwiY2hhaVwiKS5leHBlY3Q7XG5pbXBvcnQgY291Y2hKc29uQ29uZiBmcm9tIFwiLi4vaW5kZXhcIjtcbmxldCB2ZXJiID0gcmVxdWlyZShcInZlcmJvXCIpO1xuXG5sZXQgcHVibGljREIgPSB7XG4gIFwiY291Y2hkYlwiOiB7XG4gICAgXCJwcm90b2NvbFwiOiBcImh0dHBcIixcbiAgICBcImhvc3RuYW1lXCI6IFwiY291Y2hkYi5rZXJuZWwub25saW5lXCIsXG4gICAgXCJwb3J0XCI6IDgwODAsXG4gICAgXCJkYlwiOiBcInRlc3RkYlwiXG4gIH1cbn07XG5sZXQgREIgPSB7XG4gIFwiY291Y2hkYlwiOiB7XG4gICAgXCJwcm90b2NvbFwiOiBcImh0dHBcIixcbiAgICBcImhvc3RuYW1lXCI6IFwiY291Y2hkYi5rZXJuZWwub25saW5lXCIsXG4gICAgXCJwb3J0XCI6IDgwODAsXG4gIH1cbn07XG5cbmxldCBwcml2YXRlREIgPSB7XG4gIFwiY291Y2hkYlwiOiB7XG4gICAgXCJwcm90b2NvbFwiOiBcImh0dHBcIixcbiAgICBcImhvc3RuYW1lXCI6IFwiY291Y2hkYi5rZXJuZWwub25saW5lXCIsXG4gICAgXCJwb3J0XCI6IDgwODAsXG4gICAgXCJkYlwiOiBcInRlc3RkYlwiLFxuICAgIFwidXNlclwiOiBcImFkbWluXCIsXG4gICAgXCJwYXNzd29yZFwiOiBcImFkbWluXCJcbiAgfVxufTtcblxubGV0IGRiSnNvbiA9IG5ldyBjb3VjaEpzb25Db25mKERCLmNvdWNoZGIpO1xubGV0IHByaXZhdGVKc29uID0gbmV3IGNvdWNoSnNvbkNvbmYocHJpdmF0ZURCLmNvdWNoZGIpO1xubGV0IHB1YmxpY0pzb24gPSBuZXcgY291Y2hKc29uQ29uZihwdWJsaWNEQi5jb3VjaGRiKTtcblxuZGVzY3JpYmUoXCJkYiB3aXRoIGh0dHBzIGFuZCBzdGFuZGFyZCA0NDMgcG9ydFwiLCBmdW5jdGlvbigpIHtcbiAgZGVzY3JpYmUoXCJ2YWxpZGF0aW9uXCIsIGZ1bmN0aW9uKCkge1xuICAgIHZlcmIocHJpdmF0ZUpzb24pO1xuXG4gICAgdmVyYihwdWJsaWNKc29uLmZvcihcImFhXCIsIFwibW1cIikpO1xuICAgIHZlcmIocHVibGljSnNvbi5mb3IoXCJhYVwiLCBcIm1tXCIsIFwienpcIikpO1xuICAgIGl0KFwiaXMgYSBqc29uXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZXhwZWN0KHB1YmxpY0pzb24pLnRvLmJlLmEoXCJvYmplY3RcIik7XG4gICAgICBleHBlY3QocHJpdmF0ZUpzb24pLnRvLmJlLmEoXCJvYmplY3RcIik7XG4gICAgICBleHBlY3QoZGJKc29uKS50by5iZS5hKFwib2JqZWN0XCIpO1xuXG4gICAgfSk7XG5cbiAgICBpdChcImNvbnRhaW5zIHByb3RvY29sLCBob3N0LCBob3N0bmFtZSwgcG9ydCwgcHVibGlua1wiLCBmdW5jdGlvbigpIHtcbiAgICAgIGV4cGVjdChwdWJsaWNKc29uKS50by5pbmNsdWRlLmtleXMoXCJwcm90b2NvbFwiLCBcInB1YmxpbmtcIiwgXCJob3N0XCIsIFwiaG9zdG5hbWVcIiwgXCJwb3J0XCIpO1xuICAgICAgZXhwZWN0KHByaXZhdGVKc29uKS50by5pbmNsdWRlLmtleXMoXCJwcm90b2NvbFwiLCBcInB1YmxpbmtcIiwgXCJob3N0XCIsIFwiaG9zdG5hbWVcIiwgXCJwb3J0XCIpO1xuICAgICAgZXhwZWN0KGRiSnNvbikudG8uaW5jbHVkZS5rZXlzKFwicHJvdG9jb2xcIiwgXCJwdWJsaW5rXCIsIFwiaG9zdFwiLCBcImhvc3RuYW1lXCIsIFwicG9ydFwiKTtcbiAgICB9KTtcblxuXG4gIH0pO1xuXG4gIGRlc2NyaWJlKFwicHJpdmF0ZSBkYlwiLCBmdW5jdGlvbigpIHtcbiAgICBpdChcImhhcyBwcm9wZXJ0aWVzOiBhdXRoLCB1c2VyLCBwYXNzd29yZCwgZGIsIHB1YmRiLCBteWRiXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZXhwZWN0KHByaXZhdGVKc29uKS50by5pbmNsdWRlLmtleXMoXCJhdXRoXCIsIFwidXNlclwiLCBcInBhc3N3b3JkXCIsIFwiZGJcIiwgXCJwdWJkYlwiLFwibXlkYlwiKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
